package {{ base_package }}.security;

import io.jsonwebtoken.*;
import io.jsonwebtoken.security.Keys;
import lombok.RequiredArgsConstructor;
import lombok.extern.slf4j.Slf4j;
import org.springframework.beans.factory.annotation.Value;
import org.springframework.stereotype.Component;

import java.security.Key;

@Component
@RequiredArgsConstructor
@Slf4j
public class JwtUtil {

    @Value("${app.security.jwt.secret}")
    private String JWT_SECRET;

    public String extractUsernameFromToken(String token) {
        try {
            // Tạo key từ secret
            Key key = Keys.hmacShaKeyFor(JWT_SECRET.getBytes());

            // Tạo parser mới
            Jws<Claims> jwsClaims = Jwts.parserBuilder()
                    .setSigningKey(key)
                    .build()
                    .parseClaimsJws(token);

            Claims claims = jwsClaims.getBody();
            return claims.get("username", String.class);

        } catch (IllegalArgumentException | JwtException ex) {
            log.error("JWT token error: {}", ex.getMessage());
        } catch (Exception ex) {
            log.error("Error when verify token", ex);
        }

        return "";
    }
}
