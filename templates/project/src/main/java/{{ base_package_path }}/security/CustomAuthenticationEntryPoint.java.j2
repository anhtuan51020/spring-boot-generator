package {{ base_package }}.security;

import com.fasterxml.jackson.databind.ObjectMapper;
import {{ base_package }}.common.response.ApiResponseWrapper;
import {{ base_package }}.common.response.ErrorResponse;
import jakarta.servlet.http.HttpServletRequest;
import jakarta.servlet.http.HttpServletResponse;
import lombok.RequiredArgsConstructor;
import org.springframework.http.HttpStatus;
import org.springframework.http.MediaType;
import org.springframework.security.core.AuthenticationException;
import org.springframework.security.web.AuthenticationEntryPoint;
import org.springframework.stereotype.Component;

import java.io.IOException;
import java.time.LocalDateTime;
import java.util.Map;

@Component
@RequiredArgsConstructor
public class CustomAuthenticationEntryPoint implements AuthenticationEntryPoint {

    private final ObjectMapper objectMapper;

    @Override
    public void commence(
            HttpServletRequest request,
            HttpServletResponse response,
            AuthenticationException authException) throws IOException {

        ErrorResponse error = new ErrorResponse();
        error.setMessage("Bạn không được phép truy cập hoặc chưa đăng nhập.");
        error.setDetails(Map.of("error", authException.getMessage()));
        error.setTimestamp(LocalDateTime.now());

        ApiResponseWrapper<ErrorResponse> apiResponse = new ApiResponseWrapper<>();
        apiResponse.setCode(HttpStatus.UNAUTHORIZED.value());
        apiResponse.setMessage("Unauthorized");
        apiResponse.setData(error);

        response.setStatus(HttpStatus.UNAUTHORIZED.value());
        response.setContentType(MediaType.APPLICATION_JSON_VALUE);
        response.setCharacterEncoding("UTF-8");
        objectMapper.writeValue(response.getWriter(), apiResponse);
    }
}